{"ast":null,"code":"var _jsxFileName = \"/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js\";\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n\n    this.mapMovieCards = () => {\n      const z = this.state.discover.length - this.state.discover.length % 3;\n      const cardsPerDeck = 3;\n      const cardDecks = []; // ultimately want an array of card decks\n\n      for (let i = 0; i < z; i += cardsPerDeck) {\n        let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n        let cardSubset = movieSubset.map(movie => React.createElement(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://image.tmdb.org/t/p/w500\".concat(movie.poster_path),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, movie.title), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, movie.overview), React.createElement(Button, {\n          variant: \"outline-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Add\"))));\n        const cardDeck = React.createElement(CardDeck, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, cardSubset);\n        cardDecks.push(cardDeck);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, cardDecks);\n    };\n\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({\n      discover: await res.json(),\n      isLoading: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Content: Discover page for new movies\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading...\") : this.mapMovieCards()), React.createElement(\"br\", {\n      style: {\n        \"line-height\": 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"View Watchlist\")));\n  }\n\n}\n\nexport default DiscoverMovies;","map":{"version":3,"sources":["/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js"],"names":["React","Component","Card","CardDeck","Button","DiscoverMovies","constructor","mapMovieCards","z","state","discover","length","cardsPerDeck","cardDecks","i","movieSubset","slice","cardSubset","map","movie","width","poster_path","title","overview","cardDeck","push","isLoading","componentDidMount","res","fetch","setState","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({ discover: await res.json(), isLoading: false });\n  }\n\n  mapMovieCards = () => {\n\n    const z = this.state.discover.length - this.state.discover.length % 3;\n    const cardsPerDeck = 3;\n    const cardDecks = [];\n\n    // ultimately want an array of card decks\n\n    for (let i = 0; i < z; i += cardsPerDeck) {\n      let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n      let cardSubset = movieSubset.map(movie => (\n        <Card style={{ width: \"18rem\" }}>\n              <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}/>\n              <Card.Body>\n              <Card.Title>{movie.title}</Card.Title>\n              <Card.Text>{movie.overview}</Card.Text>\n              <Button variant=\"outline-primary\">Add</Button>\n              </Card.Body>\n              </Card>\n      ))\n\n      const cardDeck = (<CardDeck>{cardSubset}</CardDeck>);\n\n      cardDecks.push(cardDeck);\n    }\n\n    return (\n      <div>\n        {cardDecks}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Content: Discover page for new movies</p>\n        <div>{this.state.isLoading ? (\n            <h1>Loading...</h1>\n          ) : this.mapMovieCards()}</div>\n        <br style = {{\"line-height\":50}}></br>\n        <div textAlign=\"center\"><Button variant=\"outline-primary\" block>View Watchlist</Button></div>\n      </div>\n    );\n  }\n}\n\nexport default DiscoverMovies;"]},"metadata":{},"sourceType":"module"}