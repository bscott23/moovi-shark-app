{"ast":null,"code":"var _jsxFileName = \"/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js\";\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\"; //import MovieCard from \"./MovieCard\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n\n    this.mapMovieCards = () => {\n      const z = this.state.discover.length;\n      const cardsPerDeck = 3;\n      const cardDecks = []; // ultimately want an array of card decks\n\n      for (let i = 0; i < z; i += cardsPerDeck) {\n        let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n        let cardSubset = movieSubset.map(movie => React.createElement(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://image.tmdb.org/t/p/w500\".concat(movie.poster_path),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, movie.title), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, movie.overview), React.createElement(Button, {\n          variant: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Add\"))));\n        const cardDeck = React.createElement(CardDeck, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, cardSubset);\n        cardDecks.push(cardDeck);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, cardDecks);\n    };\n\n    this.groupMovies = () => {\n      //return (\n      for (let i = 0; i++; i < 3) {}\n    };\n\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({\n      discover: await res.json(),\n      isLoading: false\n    });\n  } // mapMovieCards = () => {\n  //   return this.state.discover.map(movie => <MovieCard key={movie.id} title={movie.title} overview={movie.overview} poster_path={movie.poster_path} />)\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Content: Discover page for new movies\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Loading...\") : this.mapMovieCards()));\n  }\n\n}\n\nexport default DiscoverMovies; // import React from \"react\"; // removed Component import\n// import Card from \"react-bootstrap/Card\";\n// import CardDeck from \"react-bootstrap/CardDeck\";\n// import Button from \"react-bootstrap/Button\";\n// class MovieCard extends React.Component {\n// //   constructor() {\n// //     super(), (this.state = {\n// //         title: \"\",\n// //         overview: \"\",\n// //         poster_path: \"\"\n// //     });\n// //   }\n// function MovieCard(props) {\n//   return (\n//     <div>\n//       <CardDeck>\n//           {props.map((card) => (\n//             <Card style={{ width: \"18rem\" }}>\n//             <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${props.poster_path}`}/>\n//             <Card.Body>\n//             <Card.Title>{props.title}</Card.Title>\n//             <Card.Text>{props.overview}</Card.Text>\n//             <Button variant=\"primary\">Add</Button>\n//             </Card.Body>\n//             </Card>\n//           ))}\n//       </CardDeck>\n//     </div>\n//   );\n// }\n// export default MovieCard;\n// <MovieCard \n//                 title={this.state.discover[0].title}\n//                 overview={this.state.discover[0].overview}\n//                 poster_path={this.state.discover[0].poster_path}/>}</div>","map":{"version":3,"sources":["/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js"],"names":["React","Component","Card","CardDeck","Button","DiscoverMovies","constructor","mapMovieCards","z","state","discover","length","cardsPerDeck","cardDecks","i","movieSubset","slice","cardSubset","map","movie","width","poster_path","title","overview","cardDeck","push","groupMovies","isLoading","componentDidMount","res","fetch","setState","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\n//import MovieCard from \"./MovieCard\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({ discover: await res.json(), isLoading: false });\n  }\n\n  // mapMovieCards = () => {\n  //   return this.state.discover.map(movie => <MovieCard key={movie.id} title={movie.title} overview={movie.overview} poster_path={movie.poster_path} />)\n  // }\n\n  mapMovieCards = () => {\n\n    const z = this.state.discover.length;\n    const cardsPerDeck = 3;\n    const cardDecks = [];\n\n    // ultimately want an array of card decks\n\n    for (let i = 0; i < z; i += cardsPerDeck) {\n      let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n      let cardSubset = movieSubset.map(movie => (\n        <Card style={{ width: \"18rem\" }}>\n              <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}/>\n              <Card.Body>\n              <Card.Title>{movie.title}</Card.Title>\n              <Card.Text>{movie.overview}</Card.Text>\n              <Button variant=\"primary\">Add</Button>\n              </Card.Body>\n              </Card>\n      ))\n\n      const cardDeck = (<CardDeck>{cardSubset}</CardDeck>);\n\n      cardDecks.push(cardDeck);\n    }\n\n    return (\n      <div>\n        {cardDecks}\n      </div>\n    );\n  }\n\n  // mapMovieCards = () => {\n  //   return (\n  //     <div>\n  //       <CardDeck>\n  //           {this.state.discover.map((movie) => (\n  //             <Card style={{ width: \"18rem\" }}>\n  //             <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}/>\n  //             <Card.Body>\n  //             <Card.Title>{movie.title}</Card.Title>\n  //             <Card.Text>{movie.overview}</Card.Text>\n  //             <Button variant=\"primary\">Add</Button>\n  //             </Card.Body>\n  //             </Card>\n  //           ))}\n  //       </CardDeck>\n  //     </div>\n  //   );\n  // }\n\n\n\n\ngroupMovies = () => {\n  //return (\n  for(let i = 0; i++; i < 3) {\n\n\n\n  }\n}\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <p>Content: Discover page for new movies</p>\n        <div>{this.state.isLoading ? (\n            <h1>Loading...</h1>\n          ) : this.mapMovieCards()}</div>\n      </div>\n    );\n  }\n}\n\nexport default DiscoverMovies;\n\n\n\n\n// import React from \"react\"; // removed Component import\n// import Card from \"react-bootstrap/Card\";\n// import CardDeck from \"react-bootstrap/CardDeck\";\n// import Button from \"react-bootstrap/Button\";\n\n// class MovieCard extends React.Component {\n// //   constructor() {\n// //     super(), (this.state = {\n// //         title: \"\",\n// //         overview: \"\",\n// //         poster_path: \"\"\n// //     });\n// //   }\n\n// function MovieCard(props) {\n//   return (\n//     <div>\n//       <CardDeck>\n//           {props.map((card) => (\n//             <Card style={{ width: \"18rem\" }}>\n//             <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${props.poster_path}`}/>\n//             <Card.Body>\n//             <Card.Title>{props.title}</Card.Title>\n//             <Card.Text>{props.overview}</Card.Text>\n//             <Button variant=\"primary\">Add</Button>\n//             </Card.Body>\n//             </Card>\n//           ))}\n//       </CardDeck>\n//     </div>\n//   );\n// }\n\n// export default MovieCard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// <MovieCard \n//                 title={this.state.discover[0].title}\n//                 overview={this.state.discover[0].overview}\n//                 poster_path={this.state.discover[0].poster_path}/>}</div>"]},"metadata":{},"sourceType":"module"}