{"ast":null,"code":"var _jsxFileName = \"/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nexport default class DiscoverMovies extends Component {\n  constructor() {\n    super();\n\n    this.mapMovieCards = () => {\n      const z = this.state.discover.length - this.state.discover.length % 3;\n      const cardsPerDeck = 3;\n      const cardDecks = []; // ultimately want an array of card decks\n\n      for (let i = 0; i < z; i += cardsPerDeck) {\n        let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n        let cardSubset = movieSubset.map(movie => React.createElement(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://image.tmdb.org/t/p/w500\".concat(movie.poster_path),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, movie.title), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, movie.overview), React.createElement(Button, {\n          variant: \"outline-primary\",\n          onClick: () => this.onAddMovie(movie),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Add\"))));\n        const cardDeck = React.createElement(CardDeck, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, cardSubset);\n        cardDecks.push(cardDeck);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, cardDecks);\n    };\n\n    this.onAddMovie = this.onAddMovie.bind(this);\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"/discover/\");\n    this.setState({\n      discover: await res.json(),\n      isLoading: false\n    });\n  }\n\n  onAddMovie(movie) {\n    const newMovie = {\n      username: \"test-user\",\n      // placeholder until user functionality is added\n      title: movie.title,\n      overview: movie.overview,\n      genres: movie.genres,\n      release_date: movie.release_date,\n      poster_path: movie.poster_path,\n      movie_db_id: movie.movie_db_id\n    };\n    axios.post(\"/watchlist/add\", newMovie).then(res => console.log(res.data));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Loading...\") : this.mapMovieCards()), React.createElement(\"br\", {\n      style: {\n        \"line-height\": 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/watchlist\",\n      className: \"btn btn-primary btn-lg\",\n      role: \"button\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Watch movies like a shark\")), React.createElement(\"br\", {\n      style: {\n        \"line-height\": 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n} //<Button variant=\"primary\" href=\"/watchlist/\" block>Go to Watchlist</Button>","map":{"version":3,"sources":["/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js"],"names":["React","Component","Link","Card","CardDeck","Button","axios","DiscoverMovies","constructor","mapMovieCards","z","state","discover","length","cardsPerDeck","cardDecks","i","movieSubset","slice","cardSubset","map","movie","width","poster_path","title","overview","onAddMovie","cardDeck","push","bind","isLoading","componentDidMount","res","fetch","setState","json","newMovie","username","genres","release_date","movie_db_id","post","then","console","log","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nexport default class DiscoverMovies extends Component {\n  constructor() {\n    super();\n\n    this.onAddMovie = this.onAddMovie.bind(this);\n\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(\"/discover/\");\n    this.setState({ discover: await res.json(), isLoading: false });\n  }\n\n  onAddMovie(movie) {\n    const newMovie = {\n        username: \"test-user\", // placeholder until user functionality is added\n        title: movie.title,\n        overview: movie.overview,\n        genres: movie.genres,\n        release_date: movie.release_date,\n        poster_path: movie.poster_path,\n        movie_db_id: movie.movie_db_id,\n    };\n    \n    axios\n      .post(\"/watchlist/add\", newMovie)\n      .then(res => console.log(res.data));\n  }\n\n  mapMovieCards = () => {\n\n    const z = this.state.discover.length - this.state.discover.length % 3;\n    const cardsPerDeck = 3;\n    const cardDecks = [];\n\n    // ultimately want an array of card decks\n\n    for (let i = 0; i < z; i += cardsPerDeck) {\n      let movieSubset = this.state.discover.slice(i, i + cardsPerDeck);\n      let cardSubset = movieSubset.map(movie => (\n        <Card style={{ width: \"18rem\" }}>\n              <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}/>\n              <Card.Body>\n              <Card.Title>{movie.title}</Card.Title>\n              <Card.Text>{movie.overview}</Card.Text>\n              <Button variant=\"outline-primary\" onClick={() => this.onAddMovie(movie)}>Add</Button>\n              </Card.Body>\n              </Card>\n      ))\n\n      const cardDeck = (<CardDeck>{cardSubset}</CardDeck>);\n\n      cardDecks.push(cardDeck);\n    }\n\n    return (\n      <div>\n        {cardDecks}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.isLoading ? (\n            <h1>Loading...</h1>\n          ) : this.mapMovieCards()}</div>\n        <br style = {{\"line-height\":50}}></br>\n        <div textAlign=\"center\"><Link to=\"/watchlist\" className=\"btn btn-primary btn-lg\" role=\"button\" block>Watch movies like a shark</Link></div>\n        <br style = {{\"line-height\":50}}></br>\n      </div>\n    );\n  }\n}\n\n\n\n//<Button variant=\"primary\" href=\"/watchlist/\" block>Go to Watchlist</Button>"]},"metadata":{},"sourceType":"module"}