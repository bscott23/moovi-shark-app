{"ast":null,"code":"var _jsxFileName = \"/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js\";\nimport React, { Component } from \"react\";\nimport MovieCard from \"./MovieCard\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n\n    this.mapMovieCards = async () => {\n      const movieCards = await this.state.discover.map(movie => React.createElement(MovieCard, {\n        key: movie.id,\n        title: movie.title,\n        overview: movie.overview,\n        poster_path: movie.poster_path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({\n      discover: await res.json(),\n      isLoading: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Content: Discover page for new movies\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Loading...\") : console.log(typeof this.mapMovieCards())));\n  }\n\n}\n\nexport default DiscoverMovies; // <MovieCard \n//                 title={this.state.discover[0].title}\n//                 overview={this.state.discover[0].overview}\n//                 poster_path={this.state.discover[0].poster_path}/>}</div>","map":{"version":3,"sources":["/Users/brodyscott/js-projects/moovi-shark-app/client/src/components/DiscoverMovies.js"],"names":["React","Component","MovieCard","DiscoverMovies","constructor","mapMovieCards","movieCards","state","discover","map","movie","id","title","overview","poster_path","isLoading","componentDidMount","res","fetch","setState","json","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACrCG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,aAbc,GAaE,YAAY;AAC1B,YAAMC,UAAU,GAAG,MAAM,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwBC,KAAK,IAAI,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,QAAA,KAAK,EAAED,KAAK,CAACE,KAAvC;AAA8C,QAAA,QAAQ,EAAEF,KAAK,CAACG,QAA9D;AAAwE,QAAA,WAAW,EAAEH,KAAK,CAACI,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC,CAAzB;AACD,KAfa;;AAEZ,SAAKP,KAAL,GAAa;AACXQ,MAAAA,SAAS,EAAE,IADA;AAEXP,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAED,QAAMQ,iBAAN,GAA0B;AACxB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAArB;AACA,SAAKC,QAAL,CAAc;AAAEX,MAAAA,QAAQ,EAAE,MAAMS,GAAG,CAACG,IAAJ,EAAlB;AAA8BL,MAAAA,SAAS,EAAE;AAAzC,KAAd;AACD;;AAMDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKd,KAAL,CAAWQ,SAAX,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE,GAEAO,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKlB,aAAL,EAAnB,CAFN,CAFF,CADF;AAQD;;AA3BoC;;AA8BvC,eAAeF,cAAf,C,CAGA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport MovieCard from \"./MovieCard\";\n\nclass DiscoverMovies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      discover: {}\n    };\n  }\n\n  async componentDidMount() {\n    let res = await fetch(\"http://localhost:5000/discover/\");\n    this.setState({ discover: await res.json(), isLoading: false });\n  }\n\n  mapMovieCards = async () => {\n    const movieCards = await this.state.discover.map(movie => <MovieCard key={movie.id} title={movie.title} overview={movie.overview} poster_path={movie.poster_path} />)\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Content: Discover page for new movies</p>\n        <div>{this.state.isLoading ? (\n            <h1>Loading...</h1>\n          ) : console.log(typeof this.mapMovieCards())}</div>\n      </div>\n    );\n  }\n}\n\nexport default DiscoverMovies;\n\n\n// <MovieCard \n//                 title={this.state.discover[0].title}\n//                 overview={this.state.discover[0].overview}\n//                 poster_path={this.state.discover[0].poster_path}/>}</div>"]},"metadata":{},"sourceType":"module"}